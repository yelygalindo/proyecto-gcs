# Scala CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/sample-config/
version: 2

sbt-build: &sbt-build
  docker:
    # specify the version you desire here
    - image: rasrules/centos7-pg11-scala:latest

  resource_class: xlarge

  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m
    TERM: dumb

  steps:
    - setup_remote_docker:
          docker_layer_caching: true  
    - restore_cache:
          keys:
            - v1-repo-code{{ .Environment.CIRCLE_SHA1 }}
    - restore_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
    - run: cat /dev/null | sbt "$SBT_COMMAND"
    - save_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
        paths:
          - ~/.m2
          - ~/.ivy2
          - ~/.sbt
sbt-integration-test: &sbt-integration-test
  docker:
      # specify the version you desire here
      - image: rasrules/centos7-pg11-scala:latest
      - image: centos/postgresql-10-centos7
        environment:
          POSTGRESQL_PASSWORD: 'gcs'
          POSTGRESQL_USER: 'gcs'
          POSTGRESQL_DATABASE: 'gcs'
          PGDATA: /var/lib/postgresql/data

  resource_class: xlarge
  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m
    TERM: dumb

  steps:
    - setup_remote_docker:
          docker_layer_caching: true
    - restore_cache:
          keys:
            - v1-repo-code{{ .Environment.CIRCLE_SHA1 }}
    - restore_cache:
        key: sbt-deps-{{ checksum "build.sbt" }}
    - run: sbt "project gcsAppIT" test


jobs:
  repo_checkout:
    docker:
      # specify the version you desire here
      - image: rasrules/centos7-pg11-scala:latest

    resource_class: xlarge

    working_directory: ~/repo
    steps:
      - checkout
      - run: cat /dev/null | sbt compile
      - save_cache:
          key: v1-repo-code{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo
      - setup_remote_docker:
          docker_layer_caching: true
    
  build:
    docker:
      # specify the version you desire here
      - image: rasrules/centos7-pg11-scala:latest

    resource_class: xlarge

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout    
      - setup_remote_docker:
          docker_layer_caching: true    
      - run: sbt doc
      - run: sbt rpm:packageBin
      - save_cache:
          key: v1-repo-rpm{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo/gcs-app/target/rpm/RPMS/noarch

  test:
    <<: *sbt-build
    environment:
      SBT_COMMAND: " test:test"
  integration-test:
    <<: *sbt-integration-test
  deploy:
    docker:
      # specify the version you desire here
      - image: rasrules/centos7-pg11-scala:latest

    resource_class: xlarge

    working_directory: ~/repo

    steps:
      - restore_cache:
          keys:
            - v1-repo-rpm{{ .Environment.CIRCLE_SHA1 }}
      - run: mkdir -p ~/.ssh
      - run: ssh-keyscan $WEBSERVER > ~/.ssh/known_hosts
          
      - add_ssh_keys:
         fingerprints:
           - "f1:35:63:ed:e4:02:b0:bf:01:5f:91:ba:53:dc:59:3a"
      - run: scp ~/repo/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm ${DEPLOY_USR}@${WEBSERVER}:/tmp
      - run: ssh ${DEPLOY_USR}@${WEBSERVER} 'sudo ./update.sh'

workflows:
  version: 2
  ci:
    jobs:
      - repo_checkout
      - build
      - test:
          requires:
            - repo_checkout
      - integration-test:
          requires:
            - repo_checkout
      - deploy:
          requires:
            - build
            - test
            - integration-test
